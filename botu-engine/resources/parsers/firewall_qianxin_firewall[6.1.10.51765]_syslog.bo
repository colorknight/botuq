botu("Firewall/Qianxin/Firewall[6.1.10.51765]/Syslog") {
    logData = MS_SRC_DATA;
    inx = indexString(logData, "devid=");
    if (inx != 0) {
        logData = subString(logData, inx);
    }
	splitParse(logData, ' ', '"', '"', "=");
	switch(type) {
        case "operate":
            pack("event") {
                DS_DVC_NAME = dname;
                START_TIME = toTime(time);
                DS_PROCESS_NAME = module;
                EVT_CATEGORY = type;
                SEVERITY = severity;
                N_EVT_CATEGORY = "/Audit";
                N_SEVERITY = dictMapping("severity",severity);
                SBJ_TYPE = "/User";
                SBJ_NAME = user;
                SBJ_HOST = dname;
                SBJ_IP = addr_src;
                APP_PROTO = from;
                BHV_CATEGORY = "/Update";
                OBJ_TYPE = "/Resource/Configuration";
                OBJ_NAME = "Configuration";
                OUTCOME = msg;
            }
        case "system":
            pack("event") {
                DS_DVC_NAME = dname;
                START_TIME = toTime(time);
                DS_PROCESS_NAME = module;
                EVT_CATEGORY = type;
                SEVERITY = severity;
                N_EVT_CATEGORY = "/Audit/System";
                N_SEVERITY = dictMapping("severity",severity);
                SBJ_TYPE = "/Host";
                SBJ_NAME = dname;
                SBJ_IP = MS_SRC_ADDRESS;
                BHV_CATEGORY = "/Is";
                OUTCOME = msg;
            }
		case "threat":
            pack("event") {
                DS_DVC_NAME = dname;
                START_TIME = toTime(time);
                DS_PROCESS_NAME = module;
                EVT_CATEGORY = dictMapping("threat_type_qianxin",threat_type);
                EVT_TYPE = dictMapping("threat_type_qianxin",threat_class);
                DURATION = session_time;
                SEVERITY = severity;
                N_EVT_CATEGORY = "/Threat";
                N_SEVERITY = dictMapping("severity",severity);
                SBJ_TYPE = "/Ip";
                SBJ_NAME = attacker_ip;
                SBJ_IP = attacker_ip;
                SBJ_PORT = port_src;
                SBJ_HOST = attack_name;
                SBJ_TRANS_IP = nataddr_src;
                SBJ_TRANS_PORT = natport_src;
                SBJ_INTERFACE = interface_src;
                SBJ_VLAN = zone_src;
                TRANS_PROTO = proto;
                APP_PROTO = appname;
                BHV_CATEGORY = "/Attack";
                OBJ_TYPE = "/Ip";
                OBJ_NAME = victim_ip;
                OBJ_IP = victim_ip;
                OBJ_PORT = port_dst;
                OBJ_HOST = victim_name;
                OBJ_TRANS_IP = nataddr_dst;
                OBJ_TRANS_PORT = natport_dst;
                OBJ_INTERFACE = interface_dst;
                OBJ_VLAN = zone_dst;
                PRT_ACTION = action;
                PLD_TYPE = sample_name;
                PLD_NAME = filename;
                PLD_EXT_NAME = filepath;
            }
		case "dns":
            pack("event") {
                DS_DVC_NAME = dname;
                START_TIME = toTime(time);
                DS_PROCESS_NAME = module;
                EVT_CATEGORY = type;
                EVT_TYPE = dns_type;
                SEVERITY = severity;
                DURATION = session_time;
                N_EVT_CATEGORY = "/Audit";
                N_SEVERITY = dictMapping("severity",severity);
                SBJ_TYPE = "/Ip";
                SBJ_NAME = addr_src;
                SBJ_IP = addr_src;
                SBJ_PORT = port_src;
                SBJ_TRANS_IP = nataddr_src;
                SBJ_TRANS_PORT = natport_src;
                SBJ_INTERFACE = interface_src;
                SBJ_VLAN = zone_src;
                TRANS_PROTO = proto;
                APP_PROTO = appname;
                BHV_CATEGORY = "/Access";
                BHV_BODY = dns_domain;
                OBJ_TYPE = "/Ip";
                OBJ_NAME = addr_dst;
                OBJ_IP = addr_dst;
                OBJ_PORT = port_dst;
                OBJ_TRANS_IP = nataddr_dst;
                OBJ_TRANS_PORT = natport_dst;
                OBJ_INTERFACE = interface_dst;
                OBJ_VLAN = zone_dst;
                PRT_ACTION = action;
                REQ_URL = dns_domain;
            }
		case "im":
            pack("event") {
                DS_DVC_NAME = dname;
                START_TIME = toTime(time);
                DS_PROCESS_NAME = module;
                EVT_CATEGORY = type;
                EVT_TYPE = app_category;
                DURATION = session_time;
                SEVERITY = severity;
                N_EVT_CATEGORY = "/Audit";
                N_SEVERITY = dictMapping("severity",severity);
                SBJ_TYPE = "/User";
                SBJ_NAME = im_account;
                SBJ_IP = addr_src;
                SBJ_PORT = port_src;
                SBJ_TRANS_IP = nataddr_src;
                SBJ_TRANS_PORT = natport_src;
                SBJ_INTERFACE = interface_src;
                SBJ_VLAN = zone_src;
                TRANS_PROTO = proto;
                APP_PROTO = behavior_proto;
                BHV_CATEGORY = "/Access";
                BEHAVIOR = im_action;
                TECHNICAL = appname;
                OBJ_TYPE = "/Ip";
                OBJ_NAME = addr_dst;
                OBJ_IP = addr_dst;
                OBJ_PORT = port_dst;
                OBJ_TRANS_IP = nataddr_dst;
                OBJ_TRANS_PORT = natport_dst;
                OBJ_INTERFACE = interface_dst;
                OBJ_VLAN = zone_dst;
                PRT_ACTION = action;
            }
		case "behavior":
            pack("event") {
                DS_DVC_NAME = dname;
                START_TIME = toTime(time);
                DS_PROCESS_NAME = module;
                EVT_CATEGORY = type;
                EVT_TYPE = app_category;
                DURATION = session_time;
                SEVERITY = severity;
                N_EVT_CATEGORY = "/Audit";
                N_SEVERITY = dictMapping("severity",severity);
                OBJ_TYPE = "/Ip";
                OBJ_NAME = addr_src;
                SBJ_IP = addr_src;
                SBJ_PORT = port_src;
                SBJ_TRANS_IP = nataddr_src;
                SBJ_TRANS_PORT = natport_src;
                SBJ_SUBO_TYPE = "/Resource/Process";
                SBJ_SUBO = appname;
                SBJ_VLAN = zone_src;
                TRANS_PROTO = proto;
                APP_PROTO = behavior_proto;
                BHV_CATEGORY = "/Access";
                BHV_BODY = behavior_commond;
                OBJ_TYPE = "/Ip";
                OBJ_NAME = addr_dst;
                OBJ_IP = addr_dst;
                OBJ_PORT = port_dst;
                OBJ_TRANS_IP = nataddr_dst;
                OBJ_TRANS_PORT = natport_dst;
                OBJ_VLAN = zone_dst;
                PRT_ACTION = action;
            }
 		case "traffic-start":
 		case "traffic-end":
             pack("event") {
                DS_DVC_NAME = dname;
                START_TIME = toTime(time);
                DS_PROCESS_NAME = module;
                EVT_CATEGORY = type;
                DURATION = session_time;
                SEVERITY = severity;
                N_EVT_CATEGORY = "/Audit/Flow";
                N_SEVERITY = dictMapping("severity",severity);
                SBJ_TYPE = "/Ip";
                SBJ_NAME = addr_src;
                SBJ_IP = addr_src;
                SBJ_PORT = port_src;
                SBJ_TRANS_IP = nataddr_src;
                SBJ_TRANS_PORT = natport_src;
                SBJ_INTERFACE = interface_src;
                SBJ_VLAN = zone_src;
                TRANS_PROTO = proto;
                APP_PROTO = appname;
                BHV_CATEGORY = "/Access";
                OBJ_TYPE = "/Ip";
                OBJ_NAME = addr_dst;
                OBJ_IP = addr_dst;
                OBJ_PORT = port_dst;
                OBJ_TRANS_IP = nataddr_dst;
                OBJ_TRANS_PORT = natport_dst;
                OBJ_INTERFACE = interface_dst;
                OBJ_VLAN = zone_dst;
                PRT_ACTION = action;
                PACKETS_IN = pkts_received;
                PACKETS_OUT = pkts_sent;
                BYTES_IN = bytes_received;
                BYTES_OUT = bytes_sent;
             }
  		case "url":
             pack("event") {
                DS_DVC_NAME = dname;
                START_TIME = toTime(time);
                DS_PROCESS_NAME = module;
                EVT_CATEGORY = type;
                EVT_TYPE = url_category;
                DURATION = session_time;
                SEVERITY = severity;
                N_EVT_CATEGORY = "/Audit";
                N_SEVERITY = dictMapping("severity",severity);
                SBJ_TYPE = "/Ip";
                SBJ_NAME = addr_src;
                SBJ_IP = addr_src;
                SBJ_PORT = port_src;
                SBJ_TRANS_IP = nataddr_src;
                SBJ_TRANS_PORT = natport_src;
                SBJ_SUBO_TYPE = "/Resource/Process";
                SBJ_SUBO = appname;
                SBJ_VLAN = zone_src;
                TRANS_PROTO = proto;
                APP_PROTO = "Http";
                BHV_CATEGORY = "/Access";
                OBJ_TYPE = "/Ip";
                OBJ_NAME = addr_dst;
                OBJ_IP = addr_dst;
                OBJ_PORT = port_dst;
                OBJ_TRANS_IP = nataddr_dst;
                OBJ_TRANS_PORT = natport_dst;
                OBJ_VLAN = zone_dst;
                PRT_ACTION = action;
                REQ_URL = url;
                REQ_USER_AGENT = url_user_agent;
                REP_CONTENT_TYPE = url_content_type;
              }
  		case "content":
             pack("event") {
                DS_DVC_NAME = dname;
                START_TIME = toTime(time);
                DS_PROCESS_NAME = module;
                EVT_CATEGORY = type;
                EVT_TYPE = content_type;
                DURATION = session_time;
                SEVERITY = severity;
                N_EVT_CATEGORY = "/Audit";
                N_SEVERITY = dictMapping("severity",severity);
                SBJ_TYPE = "/Ip";
                SBJ_NAME = addr_src;
                SBJ_IP = addr_src;
                SBJ_PORT = port_src;
                SBJ_TRANS_IP = nataddr_src;
                SBJ_TRANS_PORT = natport_src;
                SBJ_SUBO_TYPE = "/Resource/Process";
                SBJ_SUBO = appname;
                SBJ_VLAN = zone_src;
                TRANS_PROTO = proto;
                BHV_CATEGORY = "/Access";
                OBJ_TYPE = "/Ip";
                OBJ_NAME = addr_dst;
                OBJ_IP = addr_dst;
                OBJ_PORT = port_dst;
                OBJ_TRANS_IP = nataddr_dst;
                OBJ_TRANS_PORT = natport_dst;
                OBJ_VLAN = zone_dst;
                PRT_ACTION = action;
                PLD_TYPE = content_type;
                PLD_NAME = filename;
                PLD_EXT_NAME = filetype;
                PLD_CONTENT = keyword;
              }
  		case "mail":
             pack("event") {
                DS_DVC_NAME = dname;
                START_TIME = toTime(time);
                DS_PROCESS_NAME = module;
                EVT_CATEGORY = type;
                EVT_TYPE = url_category;
                DURATION = session_time;
                SEVERITY = severity;
                N_EVT_CATEGORY = "/Audit/Session/Email";
                N_SEVERITY = dictMapping("severity",severity);
                SBJ_TYPE = "/User";
                //SBJ_NAME = parseEmailAccount(mail_from);
                SBJ_NAME = mail_from;
                SBJ_SUBO_TYPE = "/Resource/Account";
                SBJ_SUBO = mail_from;
                SBJ_IP = addr_src;
                SBJ_PORT = port_src;
                SBJ_TRANS_IP = nataddr_src;
                SBJ_TRANS_PORT = natport_src;
                SBJ_SUBO_TYPE = "/Resource/Process";
                SBJ_SUBO = appname;
                SBJ_VLAN = zone_src;
                TRANS_PROTO = proto;
                BHV_CATEGORY = "/Access";
                OBJ_TYPE = "/User";
                //OBJ_NAME = parseEmailAccount(real_receiver);
                OBJ_NAME = real_receiver;
                OBJ_SUBO_TYPE = "/Resource/Account";
                OBJ_SUBO = real_receiver;
                OBJ_IP = addr_dst;
                OBJ_PORT = port_dst;
                OBJ_TRANS_IP = nataddr_dst;
                OBJ_TRANS_PORT = natport_dst;
                OBJ_VLAN = zone_dst;
                PRT_ACTION = action;
                CC = mail_cc;
                SUBJECT = mail_subject;
              }
        default:
            pack("event") {}
	}
}