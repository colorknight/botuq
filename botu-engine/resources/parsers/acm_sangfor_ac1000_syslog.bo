botu("ACM/SangFor/AC1000/Syslog") {
    if (patternParse(MS_SRC_DATA, "^\\<(?<pri>\\d+)\\>.* (?<dev>[^\\s]+) \\w+\\[\\d+\\]: \\[(?<msg>.*)\\]")) {
        sev = parseSyslogSeverity(pri);
        patternSplitParse(msg, "\\] \\[", ":");
        switch(log_type) {
            case "flux":
                pack("event") {
                    START_TIME = format2Time(time, "MMM dd HH:mm:ss");
                    DS_DVC_NAME = dev;
                    EVT_CATEGORY = log_type;
                    EVT_TYPE = serv;
                    N_EVT_CATEGORY = "/Audit/Flow";
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    SBJ_TYPE = "/User";
                    SBJ_NAME = user;
                    SBJ_ROLE = group;
                    SBJ_OS = tm_type;
                    SBJ_IP = host_ip;
                    BHV_CATEGORY = "/Access";
                    BEHAVIOR = serv;
                    APP_PROTO = app;
                    OBJ_TYPE = "/IP";
                    OBJ_HOST = site;
                    OBJ_NAME = dst_ip;
                    OBJ_IP = dst_ip;
                    BYTES_IN = down_flux;
                    BYTES_OUT = up_flux;
                }
            case "url":
                pack("event") {
                    START_TIME = format2Time(time, "MMM dd HH:mm:ss");
                    DS_DVC_NAME = dev;
                    EVT_CATEGORY = log_type;
                    EVT_TYPE = serv;
                    EVT_NAME = title;
                    N_EVT_CATEGORY = "/Audit/Session/HTTP";
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    SBJ_TYPE = "/User";
                    SBJ_NAME = user;
                    SBJ_ROLE = group;
                    SBJ_OS = tm_type;
                    SBJ_IP = host_ip;
                    SBJ_PORT = src_port;
                    BHV_CATEGORY = "/Access";
                    BEHAVIOR = serv;
                    APP_PROTO = app;
                    OBJ_TYPE = "/Host";
                    OBJ_NAME = DNS;
                    OBJ_HOST = DNS;
                    OBJ_IP = dst_ip;
                    OBJ_PORT = serv_port;
                    REQ_URL = url;
                    PRT_ACTION = net_action;
                    OUTCOME = snapshot;
                }
            case "other_log":
                pack("event") {
                    START_TIME = format2Time(time, "MMM dd HH:mm:ss");
                    DS_DVC_NAME = dev;
                    EVT_CATEGORY = log_type;
                    EVT_TYPE = serv;
                    N_EVT_CATEGORY = "/Audit/Session/HTTP";
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    SBJ_TYPE = "/User";
                    SBJ_NAME = user;
                    SBJ_ROLE = group;
                    SBJ_OS = tm_type;
                    SBJ_IP = host_ip;
                    SBJ_PORT = src_port;
                    BHV_CATEGORY = "/Access";
                    BEHAVIOR = serv;
                    TRANS_PROTO = protocol;
                    APP_PROTO = app;
                    OBJ_TYPE = "/Host";
                    OBJ_NAME = DNS;
                    OBJ_HOST = DNS;
                    OBJ_IP = dst_ip;
                    OBJ_PORT = serv_port;
                    REQ_URL = url;
                    PRT_ACTION = net_action;
                    PLD_TYPE = "/Resource/File";
                    PLD_NAME = filename;
                    PLD_VERSION = filetype;
                }
            case "login":
            case "logout":
                pack("event") {
                    START_TIME = format2Time(time, "MMM dd HH:mm:ss");
                    DS_DVC_NAME = dev;
                    EVT_CATEGORY = log_type;
                    EVT_TYPE = serv;
                    N_EVT_CATEGORY = "/Audit";
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    SBJ_TYPE = "/User";
                    SBJ_NAME = user;
                    SBJ_OS = tm_type;
                    SBJ_IP = hst_ip;
                    BHV_CATEGORY = "/Login";
                    BEHAVIOR = log_type;
                    OBJ_TYPE = "/Host";
                    OBJ_NAME = dev;
                    OBJ_IP = MS_SRC_ADDRESS;
                }
            case "upfile":
                pack("event") {
                    START_TIME = format2Time(time, "MMM dd HH:mm:ss");
                    DS_DVC_NAME = dev;
                    EVT_CATEGORY = log_type;
                    EVT_TYPE = serv;
                    N_EVT_CATEGORY = "/Audit/Session/HTTP";
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    SBJ_TYPE = "/User";
                    SBJ_NAME = user;
                    SBJ_ROLE = group;
                    SBJ_OS = tm_type;
                    SBJ_IP = host_ip;
                    SBJ_PORT = src_port;
                    BHV_CATEGORY = "/Access";
                    BEHAVIOR = serv;
                    APP_PROTO = app;
                    OBJ_TYPE = "/Ip";
                    OBJ_NAME = dst_ip;
                    OBJ_ROLE = urltype;
                    OBJ_IP = dst_ip;
                    OBJ_PORT = serv_port;
                    PRT_ACTION = net_action;
                    PLD_TYPE = "/Resource/File";
                    PLD_NAME = filename;
                    PLD_SIZE = filesize;
                    PLD_VERSION = filetype;
                }
        }
    }
}