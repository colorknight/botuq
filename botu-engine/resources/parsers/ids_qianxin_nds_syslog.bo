botu("IDS/Qianxin/NDS/Syslog"){
    if (patternParse(MS_SRC_DATA, "\\<(?<pri>\\d+)\\>(?<cat>\\w+) (?<detail>.*)")) {
        splitParse(detail, ' ', '"', '"', "=");
        switch(cat){
            case "skyeye_webattack":
                pack("event"){
                    START_TIME = toTime(write_date);
                    DS_PROCESS_NAME = cat;
                    EVT_CATEGORY = rule_name;
                    EVT_CATEGORY = vuln_type;
                    EVT_TYPE = rule_name;
                    SEVERITY = severity;
                    N_EVT_CATEGORY = "/Threat/Attack/Vulnerability";
                    N_SEVERITY = simpleMapping(severity, "{8:5,6:4,4:3,2:1}", 1);
                    PHRASE = dictMapping("killchain_ids_qianxin_nsd",kill_chain);
                    SBJ_TYPE= "/Ip";
                    SBJ_NAME = attacker;
                    SBJ_IP = sip;
                    SBJ_PORT = sport;
                    SBJ_MAC = src_mac;
                    BHV_CATEGORY = "/Attack";
                    TECHNICAL = strFormat("%s/%s", attack_type,vuln_name);
                    OBJ_TYPE = "/Ip";
                    OBJ_NAME = victim;
                    OBJ_IP = dip;
                    OBJ_PORT = dport;
                    OBJ_MAC = dst_mac;
                    OUTCOME = detail_info;
                    PRT_STATUS = simpleMapping(attack_result, "{0:企图,1:成功,2:失陷,3:未知,4:拦截}", 1);
                    CONFIDENCE = confidence;
                    SOLUTION = solution;
                    REQ_URL = uri;
                    REQ_PARAMS = parameter;
                    REQ_XFF = xff;
                    REQ_REFERER = referer;
                    REQ_COOKIE = cookie;
                    REQ_USER_AGENT = agent;
                    REP_CONTENT_TYPE = rsp_content_type;
                    REP_CONTENT_LENGTH = rsp_content_length;
                }
            case "skyeye_ids":
                pack("event"){
                    START_TIME = toTime(write_date);
                    DURATION = duration;
                    EVT_CATEGORY = cat;
                    EVT_TYPE = vuln_type;
                    EVT_ID = rule_id;
                    EVT_NAME = rule_name;
                    SEVERITY = severity;
                    N_EVT_CATEGORY = "/Threat/Attack";
                    N_SEVERITY = simpleMapping(severity, "{8:5,6:4,4:3,2:1}", 1);
                    PHRASE = dictMapping("killchain_ids_qianxin_nsd",kill_chain);
                    SBJ_TYPE= "/Ip";
                    SBJ_NAME = attacker;
                    SBJ_IP = sip;
                    SBJ_PORT = sport;
                    SBJ_MAC = src_mac;
                    BHV_CATEGORY = "/Attack";
                    BEHAVIOR = attack_method;
                    TECHNICAL = strFormat("%s/%s", attack_type,vuln_name);
                    APP_PROTO = appid;
                    TRANS_PROTO = protocol_id;
                    BHV_BODY = up_payload;
                    OBJ_TYPE = "/Ip";
                    OBJ_NAME = victim;
                    OBJ_IP = dip;
                    OBJ_PORT = dport;
                    OBJ_MAC = dst_mac;
                    OBJ_OS = platform;
                    OUTCOME = detail_info;
                    PRT_STATUS = simpleMapping(attack_result, "{0:企图,1:成功,2:失陷,3:未知,4:拦截}", 1);
                    CONFIDENCE = confidence;
                    SOLUTION = bulletin;
                    BYTES_IN = down_payload_size;
                    BYTES_OUT = up_payload_size;
                    PLD_TYPE = "Bin";
                    PLD_SIZE = packet_size;
                    PLD_CONTENT = packet_data;
                }
            case "skyeye_ioc":
                pack("event"){
                    START_TIME = toTime(access_time);
                    EVT_CATEGORY = cat;
                    EVT_TYPE = strFormat("%s/%s", malicious_type, malicious_family);
                    EVT_ID = tid;
                    EVT_NAME = rule_desc;
                    SEVERITY = sev;
                    N_EVT_CATEGORY = "/Threat/Attack";
                    N_SEVERITY = simpleMapping(severity, "{9:5,7:4,5:3,3:1}", 1);
                    PHRASE = phrase;
                    SBJ_TYPE= "/Ip";
                    SBJ_NAME = sip;
                    SBJ_IP = sip;
                    SBJ_PORT = sport;
                    SBJ_MAC = src_mac;
                    BHV_CATEGORY = "/Attack";
                    BEHAVIOR = attack_type;
                    TECHNICAL = attck_tech;
                    TRANS_PROTO = tproto;
                    APP_PROTO = proto;
                    OBJ_TYPE = "/Host";
                    OBJ_NAME = host;
                    OBJ_HOST = host;
                    OBJ_IP = dip;
                    OBJ_PORT = dport;
                    OBJ_MAC = dst_mac;
                    OBJ_OS = platform;
                    OUTCOME = desc;
                    CONFIDENCE = confidence;
                    PRT_STATUS = simpleMapping(attack_result, "{0:企图,1:成功,2:失陷,3:未知,4:拦截}", 1);
                    PLD_TYPE = "Bin";
                    PLD_CONTENT = packet_data;
                }
            case "skyeye_xxxx":
                pack("event"){
                    START_TIME = toTime(access_time);
                    DURATION = duration;
                    EVT_CATEGORY = cat;
                    EVT_TYPE = strFormat("%s/%s", malicious_type, malicious_family);
                    EVT_ID = rule_id;
                    EVT_NAME = rule_name;
                    SEVERITY = severity;
                    N_EVT_CATEGORY = "/Threat/Attack";
                    N_SEVERITY = simpleMapping(severity, "{8:5,6:4,4:3,2:1}", 1);
                    PHRASE = dictMapping("killchain_ids_qianxin_nsd",kill_chain);
                    SBJ_TYPE= "/Ip";
                    SBJ_NAME = attacker;
                    SBJ_IP = sip;
                    SBJ_PORT = sport;
                    SBJ_MAC = src_mac;
                    BHV_CATEGORY = "/Attack";
                    BEHAVIOR = app_name;
                    TECHNICAL = rule_name;
                    APP_PROTO = protol7_name;
                    OBJ_TYPE = "/Ip";
                    OBJ_NAME = victim;
                    OBJ_IP = dip;
                    OBJ_PORT = dport;
                    OBJ_MAC = dst_mac;
                    OBJ_OS = affected_platform;
                    OUTCOME = desc;
                    PRT_ACTION = simpleMapping(detect_method, "{1:local,2:cloud,3:sandbox}", 1);
                    PRT_STATUS = simpleMapping(attack_result, "{0:企图,1:成功,2:失陷,3:未知,4:拦截}", 1);
                    CONFIDENCE = simpleMapping(confidence, "{0:低,1:中,2:高}", 1);
                    PLD_TYPE = "File";
                    PLD_NAME = strFormat("%s/%s", file_dir, filename);
                    PLD_SIG = file_md5;
                }
            default:
                pack(){}
        }
   }
}