botu("IDS/LeadSec/IDS/Syslog") {
    patternParse(MS_SRC_DATA, "[^\\{]*(?<msg>.*)");
    jsonParse(msg, true);
    if(virus_type != null){
        pack("event") {
            START_TIME = toTime(start_time);
            EVT_CATEGORY = virus_name;
            EVT_TYPE = simpleMapping(virus_type, "{0:自定义,1:钓鱼网站,2:信息诈骗,3:虚假销售,4:恶意文件,5:博彩网站,6:色情网站,7:虚假信息}",0);
            N_EVT_CATEGORY = "/Threat/MalResource";
            SEVERITY = event_level;
            N_SEVERITY = dictMapping("severity",event_level);
            SBJ_TYPE = "/Ip";
            SBJ_NAME = src_ip;
            SBJ_IP = src_ip;
            SBJ_PORT = src_port;
            SBJ_MAC = convert2Mac(src_mac);
            BHV_CATEGORY = "/Access";
            TRANS_PROTO = protocol;
            OBJ_TYPE = "/Ip";
            OBJ_NAME = dst_ip;
            OBJ_IP = dst_ip;
            OBJ_PORT = dst_port;
            OBJ_MAC = convert2Mac(dst_mac);
            OUTCOME = msg;
        }
    }else if(virus_name != null){
        pack("event") {
            START_TIME = toTime(start_time);
            EVT_TYPE = virus_name;
            N_EVT_CATEGORY = "/Threat/Malware/Virus";
            SEVERITY = event_level;
            N_SEVERITY = dictMapping("severity",event_level);
            SBJ_TYPE = "/Ip";
            SBJ_NAME = src_ip;
            SBJ_IP = src_ip;
            SBJ_PORT = src_port;
            SBJ_MAC = convert2Mac(src_mac);
            BHV_CATEGORY = "/Attack";
            TRANS_PROTO = protocol;
            OBJ_TYPE = "/Ip";
            OBJ_NAME = dst_ip;
            OBJ_IP = dst_ip;
            OBJ_PORT = dst_port;
            OBJ_MAC = convert2Mac(dst_mac);
            OUTCOME = msg;
        }
    }else if(attackid != null){
        pack("event") {
            START_TIME = toTime(time);
            EVT_CATEGORY = dictMapping("security_type_leadsec",securityid);
            //EVT_TYPE = dictMapping("attack_type_leadsec",attackid);
            //EVT_NAME = subject;
            EVT_TYPE = subject;
            N_EVT_CATEGORY = "/Threat/Attack";
            N_SEVERITY = simpleMapping(level, "{10:1,20:2,30:3,40:4}",10);
            SBJ_TYPE = "/Ip";
            SBJ_NAME = field("source.ip");
            SBJ_IP = field("source.ip");
            SBJ_PORT = field("source.port");
            BHV_CATEGORY = "/Attack";
            TRANS_PROTO = protocol;
            OBJ_TYPE = "/Ip";
            OBJ_NAME = field("destination.ip");
            OBJ_IP = field("destination.ip");
            OBJ_PORT = field("destination.port");
            OUTCOME = message;
        }
    }else if(content != null){
        jsonParse(content,true);
        pack("event") {
            START_TIME = toTime(start_time);
            N_EVT_CATEGORY = "/Audit";
            N_SEVERITY = 2;
            SBJ_TYPE = "/User";
            SBJ_NAME = decodeBase64(sender);
            SBJ_IP = src_ip;
            SBJ_PORT = src_port;
            BHV_CATEGORY = "/Send";
            TRANS_PROTO = protocol;
            OBJ_TYPE = "/Acount";
            OBJ_NAME = decodeBase64(recipient);
            OBJ_IP = dst_ip;
            OBJ_PORT = dst_port;
            SUBJECT = email_title;
        }
    }else if(character != null){
        pack("event") {
            START_TIME = toTime(start_time);
            N_EVT_CATEGORY = "/Audit";
            EVT_TYPE = type;
            N_SEVERITY = simpleMapping(level, "{10:1,20:2,30:3,40:4}",10);
            SBJ_TYPE = "/Ip";
            SBJ_NAME = src_ip;
            SBJ_IP = src_ip;
            SBJ_PORT = src_port;
            BHV_CATEGORY = "/Access";
            OBJ_TYPE = "/Ip";
            OBJ_NAME = dst_ip;
            OBJ_IP = dst_ip;
            OBJ_PORT = dst_port;
        }
    }else {
        pack("event") {
            START_TIME = toTime(start_time);
            N_EVT_CATEGORY = "/Audit";
            N_SEVERITY = 1;
            OUTCOME = MS_SRC_DATA;
        }
    }

}