botu("IPS/Huawei/NIP6000/Syslog") {
    temp = replaceString(MS_SRC_DATA,", ",",");
    sev = parseSyslogSeverity(pri);
    if(patternParse(temp, "\\<*(?<pri>[\\d]*)\\>*(?<time>[^:]+:\\d+:\\d+)\\s*(?<host>[^\\s]+)\\s*([%])*\\s*(?<version>\\d*)\\s*(?<module>[^/]+)/(?<sev>\\d+)/(?<brief>[^()]+)([^:]+):\\s*(?<info>.*)")){
        nCat = "/Audit";
        switch(module){
            case "POLICY":
                if(brief == "POLICYACCFAIL"){
                    pack("event"){
                        START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                        DS_DVC_NAME = host;
                        DS_PROCESS_NAME = module;
                        EVT_CATEGORY = module;
                        EVT_TYPE = brief;
                        SEVERITY = sev;
                        N_SEVERITY = dictMapping("severity",sev);
                        N_EVT_CATEGORY = nCat;
                        OUTCOME = info;
                        STATUS = status;
                    }
                }else{
                    splitParse(info, ',','"','"',"=");
                    if(brief == "POLICYDENY"){
                      nCat = "/Violation";
                    }
                    pack("event"){
                        START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                        DS_DVC_NAME = host;
                        DS_PROCESS_NAME = module;
                        EVT_CATEGORY = module;
                        EVT_TYPE = brief;
                        EVT_NAME = field("rule-name");
                        SEVERITY = sev;
                        N_SEVERITY = dictMapping("severity",sev);
                        N_EVT_CATEGORY = nCat;
                        SBJ_TYPE = "/Ip";
                        SBJ_IP = field("source-ip");
                        SBJ_NAME = field("source-ip");
                        SBJ_PORT = field("source-port");
                        BHV_CATEGORY = "/Access";
                        TRANS_PROTO = protocol;
                        OBJ_TYPE = "/Ip";
                        OBJ_IP = field("destination-ip");
                        OBJ_NAME = field("destination-ip");
                        OBJ_PORT = field("destination-port");
                    }
                }
            case "SECLOG":
                splitParse(info, ',','"','"',"=");
                pack("event"){
                    START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                    DS_DVC_NAME = host;
                    DS_PROCESS_NAME = module;
                    EVT_CATEGORY = module;
                    EVT_TYPE = brief;
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    N_EVT_CATEGORY = nCat;
                    SBJ_TYPE = "/Ip";
                    SBJ_IP = SourceIP;
                    SBJ_NAME = SourceIP;
                    SBJ_PORT = SourcePort;
                    BHV_CATEGORY = "/Access";
                    TRANS_PROTO = Protocol;
                    OBJ_TYPE = "/Ip";
                    OBJ_IP = DestinationIP;
                    OBJ_NAME = DestinationIP;
                    OBJ_PORT = DestinationPort;
                    PACKETS_IN = SendPkts;
                    BYTES_IN = SendBytes;
                    PACKETS_OUT = RcvPkts;
                    BYTES_OUT = RcvBytes;
                }
            case "ASSOC":
                if(brief == "ATTACK"){
                    patternParse(info, ".*\\((?<msg>[^()]+)\\)");
                    splitParse(msg, ',', null, null, "=");
                    pack("event"){
                        START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                        DS_DVC_NAME = host;
                        DS_PROCESS_NAME = module;
                        EVT_CATEGORY = module;
                        EVT_TYPE = Category;
                        EVT_NAME = SignName;
                        SEVERITY = Severity;
                        N_SEVERITY = dictMapping("severity",Severity);
                        N_EVT_CATEGORY = "/Threat/Attack";
                        SBJ_TYPE = "/Ip";
                        SBJ_IP = SrcIp;
                        SBJ_NAME = SrcIp;
                        SBJ_PORT = SrcPort;
                        BHV_CATEGORY = "/Attack";
                        TRANS_PROTO = Protocol;
                        OBJ_TYPE = "/Ip";
                        OBJ_IP = DstIp;
                        OBJ_NAME = DstIp;
                        OBJ_PORT = DstPort;
                        PRT_ACTION = Action;
                    }
                }
            case "AV":
                patternParse(info, ".*\\((?<msg>[^()]+)\\)");
                splitParse(msg, ',', null, null, "=");
                pack("event"){
                    START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                    DS_DVC_NAME = host;
                    DS_PROCESS_NAME = module;
                    EVT_CATEGORY = module;
                    EVT_TYPE = ViruName;
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    N_EVT_CATEGORY = "/Threat/Malware/Virus";
                    SBJ_TYPE = "/Ip";
                    SBJ_IP = SrcIp;
                    SBJ_NAME = SrcIp;
                    SBJ_PORT = SrcPort;
                    BHV_CATEGORY = "/Attack";
                    TRANS_PROTO = Protocol;
                    OBJ_TYPE = "/Ip";
                    OBJ_IP = DstIp;
                    OBJ_NAME = DstIp;
                    OBJ_PORT = DstPort;
                    PRT_ACTION = Action;
                }
            case "CM":
                if(brief == "USER_ACCESSRESULT"){
                    bhvCat = "/Login";
                }else{
                    bhvCat = "/LogOut";
                }
                pack("event"){
                    START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                    DS_DVC_NAME = host;
                    DS_PROCESS_NAME = module;
                    EVT_CATEGORY = module;
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    N_EVT_CATEGORY = "/Audit";
                    SBJ_TYPE = "/User";
                    SBJ_IP = IPADDRESS;
                    SBJ_NAME = USER;
                    SBJ_MAC = convert2Mac(MAC);
                    BHV_CATEGORY = bhvCat;
                    OUTCOME = info;
                }
            case "DDOS":
                splitParse(info, ',', '"', '"', "=");
                srcSegs = strSplit(src, ":");
                dstSegs = strSplit(dst, ":");
                pack("event"){
                    START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                    DS_DVC_NAME = host;
                    DS_PROCESS_NAME = module;
                    EVT_CATEGORY = module;
                    EVT_TYPE = AttackType;
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    N_EVT_CATEGORY = "/Threat/Attack";
                    SBJ_TYPE = "/Ip";
                    SBJ_IP = srcSegs[0];
                    SBJ_NAME = srcSegs[0];
                    SBJ_PORT = srcSegs[1];
                    BHV_CATEGORY = "/Attack";
                    OBJ_TYPE = "/Ip";
                    OBJ_IP = dstSegs[0];
                    OBJ_NAME = dstSegs[0];
                    OBJ_PORT = dstSegs[1];
                    PACKETS_IN = field("total packets");
                    PRT_ACTION = Action;
                }
            case "ATK":
                splitParse(info, ',', '"', '"', "=");
                srcSegs = strSplit(src, ":");
                dstSegs = strSplit(trim(dst, " "), ":");
                pack("event"){
                    START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                    DS_DVC_NAME = host;
                    DS_PROCESS_NAME = module;
                    EVT_CATEGORY = module;
                    EVT_TYPE = AttackType;
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    N_EVT_CATEGORY = "/Threat/Attack";
                    SBJ_TYPE = "/Ip";
                    SBJ_IP = srcSegs[0];
                    SBJ_NAME = srcSegs[0];
                    SBJ_PORT = srcSegs[1];
                    BHV_CATEGORY = "/Attack";
                    TRANS_PROTO = proto;
                    OBJ_TYPE = "/Ip";
                    OBJ_IP = dstSegs[0];
                    OBJ_NAME = dstSegs[0];
                    OBJ_PORT = toInt(dstSegs[1]);
                    PRT_ACTION = Action;
                }
            case "HTTPD":
                if(brief == "CMD"){
                    splitParse(msg, ',', null, null, ":");
                    pack("event"){
                        START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                        DS_DVC_NAME = host;
                        DS_PROCESS_NAME = module;
                        EVT_CATEGORY = module;
                        SEVERITY = sev;
                        N_SEVERITY = dictMapping("severity",sev);
                        N_EVT_CATEGORY = "/Audit";
                        SBJ_TYPE = "/User";
                        SBJ_IP = ip;
                        SBJ_NAME = user;
                        BHV_CATEGORY = "/Execute";
                        OUTCOME = command;
                    }
                }
                pack("event"){
                    START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                    DS_DVC_NAME = host;
                    DS_PROCESS_NAME = module;
                    EVT_CATEGORY = module;
                    EVT_TYPE = brief;
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    N_EVT_CATEGORY = nCat;
                    OUTCOME = info;
                    STATUS = status;
                }
            case "IPS":
                patternParse(info, ".*\\((?<msg>[^()]+)\\)");
                splitParse(msg, ',', null, null, "=");
                pack("event"){
                    START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                    DS_DVC_NAME = host;
                    DS_PROCESS_NAME = module;
                    EVT_CATEGORY = brief;
                    EVT_TYPE = Category;
                    EVT_NAME = SignName;
                    SEVERITY = Severity;
                    N_SEVERITY = dictMapping("severity",Severity);
                    N_EVT_CATEGORY = "/Threat/Attack";
                    SBJ_TYPE = "/Ip";
                    SBJ_IP = SrcIp;
                    SBJ_NAME = SrcIp;
                    SBJ_PORT = SrcPort;
                    TRANS_PROTO = Protocol;
                    BHV_CATEGORY = "/Attack";
                    OBJ_TYPE = "/Ip";
                    OBJ_IP = DstIp;
                    OBJ_NAME = DstIp;
                    OBJ_PORT = DstPort;
                    PACKETS_IN = field("total packets");
                    PRT_ACTION = Action;
                }
            case "ANTI-APT":
                patternParse(info, ".*\\((?<msg>[^()]+)\\)");
                splitParse(msg, ',', null, null, "=");
                pack("event"){
                    START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                    DS_DVC_NAME = host;
                    DS_PROCESS_NAME = module;
                    EVT_CATEGORY = brief;
                    EVT_TYPE = ThreatType;
                    EVT_NAME = ThreatName;
                    SEVERITY = Severity;
                    N_SEVERITY = dictMapping("severity",Severity);
                    N_EVT_CATEGORY = "/Threat/Attack";
                    SBJ_TYPE = "/Ip";
                    SBJ_IP = SrcIp;
                    SBJ_NAME = SrcIp;
                    SBJ_PORT = SrcPort;
                    TRANS_PROTO = Protocol;
                    BHV_CATEGORY = "/Attack";
                    OBJ_TYPE = "/Ip";
                    OBJ_IP = DstIp;
                    OBJ_NAME = DstIp;
                    OBJ_PORT = DstPort;
                    PRT_ACTION = Action;
                }
            case "URL":
                patternParse(info, ".*\\((?<msg>[^()]+)\\)");
                splitParse(msg, ',', null, null, "=");
                pack("event"){
                    START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                    DS_DVC_NAME = host;
                    DS_PROCESS_NAME = module;
                    EVT_CATEGORY = brief;
                    EVT_TYPE = Category;
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    N_EVT_CATEGORY = "/Audit";
                    SBJ_TYPE = "/Ip";
                    SBJ_IP = SrcIp;
                    SBJ_NAME = SrcIp;
                    SBJ_PORT = SrcPort;
                    TRANS_PROTO = Protocol;
                    BHV_CATEGORY = "/Access";
                    OBJ_TYPE = "/Ip";
                    OBJ_IP = DstIp;
                    OBJ_NAME = DstIp;
                    OBJ_PORT = DstPort;
                    PRT_ACTION = Action;
                }
            case "FWD":
               if(brief == "DDOSALARM"){
                    patternParse(info, ".*\\((?<msg>[^()]+)\\)");
                    splitParse(msg, ',', null, null, "=");
                    src = strSplit(source, ":");
                    dst = strSplit(destination, ":");
                    pack("event"){
                        START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                        DS_DVC_NAME = host;
                        DS_PROCESS_NAME = module;
                        EVT_CATEGORY = brief;
                        SEVERITY = sev;
                        N_SEVERITY = dictMapping("severity",sev);
                        N_EVT_CATEGORY = "/Threat/Attack";
                        SBJ_TYPE = "/Ip";
                        SBJ_IP = src[0];
                        SBJ_NAME = src[0];
                        SBJ_PORT = src[1];
                        TRANS_PROTO = protocol;
                        BHV_CATEGORY = "/Attack";
                        OBJ_TYPE = "/Ip";
                        OBJ_IP = dst[0];
                        OBJ_NAME = dst[0];
                        OBJ_PORT = dst[1];
                    }
               }else{
                    pack("event"){
                        START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                        DS_DVC_NAME = host;
                        DS_PROCESS_NAME = module;
                        EVT_CATEGORY = module;
                        EVT_TYPE = brief;
                        SEVERITY = sev;
                        N_SEVERITY = dictMapping("severity",sev);
                        N_EVT_CATEGORY = nCat;
                        OUTCOME = info;
                        STATUS = status;
                    }
               }
            case "ACL6":
               if(brief == "ACL6DENY"){
                   nCat = "/Violation";
               }
            case "ASPF":
                status = "Blocked";
            case "FTPS":
                if(brief == "ACL_DENY"){
                    nCat = "/Violation";
                }
            default:
                pack("event"){
                    START_TIME = format2Time(time, "yyyy-MM-dd HH:mm:ss");
                    DS_DVC_NAME = host;
                    DS_PROCESS_NAME = module;
                    EVT_CATEGORY = module;
                    EVT_TYPE = brief;
                    SEVERITY = sev;
                    N_SEVERITY = dictMapping("severity",sev);
                    N_EVT_CATEGORY = nCat;
                    OUTCOME = info;
                    STATUS = status;
                }
        }
    }
}